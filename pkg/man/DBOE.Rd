% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DBOE.R
\name{DBOE}
\alias{DBOE}
\title{Database Object Explorer}
\description{
\code{DBOE} facilitates the navigation of SQL Server DBMS objects by way of retrieving the metatadata objects.
It also provides methods to retrieve information from the data catalog: specifically, the \href{http://datacatalog.alliance.local/en/datacatalog/edwchangelog}{EDW changelog}.  Once retrieved, changes can be compared against user-supplied source code
}
\note{
The workflow should look like the following:\cr \code{DBOE$new(dsn = , credentials = )\{$get.metadata()\{$get.xdep(db = )\{$get.changelog()\{$search.changelog(db = , ...) | crossref.code(code_files = , use.search = "c")\{; dboe$report\}\}\}\}\}}
}
\concept{metadata}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{conns}}{A named list of DBI connections given as <database name> = <DBI connection>}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{credentials}}{The values passed during initialization for use in \code{\link[keyring]{key_get}}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DBOE-new}{\code{DBOE$new()}}
\item \href{#method-DBOE-get.metadata}{\code{DBOE$get.metadata()}}
\item \href{#method-DBOE-get.xdep}{\code{DBOE$get.xdep()}}
\item \href{#method-DBOE-make.virtual_database}{\code{DBOE$make.virtual_database()}}
\item \href{#method-DBOE-clone}{\code{DBOE$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBOE-new"></a>}}
\if{latex}{\out{\hypertarget{method-DBOE-new}{}}}
\subsection{Method \code{new()}}{
Initialize the class object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBOE$new(conns, keyring_credentials = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{conns}}{A named list with key-value elements (e.g., DSN_name = default_database_name): this can be set (\code{self$dsn <- list(...)}) before using DBMS-related methods}

\item{\code{keyring_credentials}}{A list holding the \code{\link[keyring]{keyring}} name, service, and username for the secured password}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The class object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBOE-get.metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DBOE-get.metadata}{}}}
\subsection{Method \code{get.metadata()}}{
\code{$get.metadata()} retrieves metadata information for the database pointed to by argument \code{conns}. Once metadata has been retrieved, metadata can be accessed for tables, views, and stored procedures using the following access method: \code{<DBOE obj>$<database name>$<table/view/proc name>}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBOE$get.metadata(conns = self$conns, chatty = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{conns}}{A named list of DBI connections given as <database name> = <DBI connection>}

\item{\code{chatty}}{(logical) When \code{TRUE}, additional execution messages are sent to the console}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The class object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBOE-get.xdep"></a>}}
\if{latex}{\out{\hypertarget{method-DBOE-get.xdep}{}}}
\subsection{Method \code{get.xdep()}}{
\code{get.xdep()} retrieves cross-database dependencies for endpoints provided in \code{self$conns}.  Results are saved as attributes to either of \code{sys.views} or code{sys.procedures}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBOE$get.xdep(db)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{db}}{(string, symbol) The name of the database for which cross-database dependencies will be searched}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The class object, invisibly
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBOE-make.virtual_database"></a>}}
\if{latex}{\out{\hypertarget{method-DBOE-make.virtual_database}{}}}
\subsection{Method \code{make.virtual_database()}}{
\code{$make.virtual_database} creates a set of \code{\link[dplyr]{tbl}} objects in an environment
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBOE$make.virtual_database(
  conn_name = names(self$conns),
  db_env = rlang::caller_env(),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{conn_name}}{The \code{DBOE} connection name to use}

\item{\code{db_env}}{The environment object where created objects should be stored}

\item{\code{...}}{The names of objects to retrieve: retrieves all tables and views if left blank.  If given as named arguments, the name becomes the local object name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An assignable environment object with \code{DBI}-sourced \code{\link[dplyr]{tbl}}s
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DBOE-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DBOE-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DBOE$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
